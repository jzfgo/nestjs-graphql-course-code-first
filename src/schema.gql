# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Flavor model"""
type Flavor {
  """An unique identifier"""
  id: ID!
  name: String!
  coffees: [Coffee!]!
}

"""Coffee model"""
type Coffee implements Drink {
  name: String!

  """An unique identifier"""
  id: ID!
  brand: String!
  flavors: [Flavor!]!
  createdAt: Date
  type: CoffeeType
}

interface Drink {
  name: String!
}

"""Date custom scalar type"""
scalar Date

enum CoffeeType {
  ARABICA
  ROBUSTA
}

"""Tea model"""
type Tea implements Drink {
  name: String!
}

type Query {
  drinks: [DrinksResult!]!
  coffees: [Coffee!]!
  coffee(id: ID!): Coffee!
}

union DrinksResult = Coffee | Tea

type Mutation {
  createCoffee(createCoffeeInput: CreateCoffeeInput!): Coffee!
  updateCoffee(id: ID!, updateCoffeeInput: UpdateCoffeeInput!): Coffee!
  removeCoffee(id: ID!): Coffee!
}

input CreateCoffeeInput {
  """The name of the coffee"""
  name: String!

  """The brand of the coffee"""
  brand: String!

  """The flavors of the coffee"""
  flavors: [String!]!

  """The type of the coffee"""
  type: CoffeeType!
}

input UpdateCoffeeInput {
  """The name of the coffee"""
  name: String

  """The brand of the coffee"""
  brand: String

  """The flavors of the coffee"""
  flavors: [String!]

  """The type of the coffee"""
  type: CoffeeType
}

type Subscription {
  coffeeAdded: Coffee!
}